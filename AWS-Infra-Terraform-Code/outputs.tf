output "cluster_endpoint" {
  description = "Endpoint for EKS control plane."
  value       = module.eks.cluster_endpoint
}

output "cluster_name" {
  description = "EKS Cluster name."
  value       = module.eks.cluster_name
}

output "cluster_certificate_authority_data" {
  description = "Base64 encoded certificate data required to communicate with the cluster"
  value       = module.eks.cluster_certificate_authority_data
}

output "oidc_provider_arn" {
  description = "The ARN of the OIDC Provider if `enable_irsa = true`"
  value       = module.eks.oidc_provider_arn
}

output "cluster_security_group_id" {
  description = "Security group ids attached to the cluster control plane."
  value       = module.eks.cluster_security_group_id
}
/*
output "kubectl_config" {
  description = "kubectl config as generated by the module."
  value       = module.eks.kubeconfig
}

output "config_map_aws_auth" {
  description = "A kubernetes configuration to authenticate to this EKS cluster."
  value       = module.eks.config_map_aws_auth
}
*/
output "region" {
  description = "AWS region."
  value       = var.region
}

# output "vpc_id" {
#   description = "vpc id"
#   value       = var.vpc_id
# }

# output "eks_managed_node_groups" {
#   description = "Map of attribute maps for all EKS managed node groups created"
#   value       = module.eks.eks_managed_node_groups
# }

output "eks_managed_node_groups_autoscaling_group_names" {
  description = "List of the autoscaling group names created by EKS managed node groups"
  value       = module.eks.eks_managed_node_groups_autoscaling_group_names
}

output "rds_secret_arn" {
  description = "ARN of the RDS password secret in AWS Secrets Manager"
  value       = aws_secretsmanager_secret.rds_password.arn
}

output "rds_endpoint" {
  description = "RDS instance endpoint"
  value       = module.rds.db_instance_endpoint
}

# Karpenter outputs disabled
# output "karpenter_queue_name" {
#   description = "Name of the SQS queue used by Karpenter for spot interruption handling"
#   value       = module.karpenter.queue_name
# }

# output "karpenter_node_iam_role_name" {
#   description = "Name of the IAM role used by Karpenter nodes"
#   value       = module.karpenter.node_iam_role_name
# }

# output "ArgoCD_ELB" {
#   value = data.kubernetes_service.argocd_server.status[0].load_balancer[0].ingress[0].hostname
#   description = "The external DNS name of the ArgoCD LoadBalancer"
# }
